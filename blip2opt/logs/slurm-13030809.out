WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
loss DRSL3 b=0.0001 start=0 end=6loss DRSL3 b=0.0001 start=0 end=6

loss DRSL3 b=0.0001 start=0 end=6
loss DRSL3 b=0.0001 start=0 end=6
| distributed init (rank 0, world 4): env://
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /public/home/mswanghao/TorchProject/lavis/train.py:115 in <module>           │
│                                                                              │
│   112                                                                        │
│   113                                                                        │
│   114 if __name__ == "__main__":                                             │
│ ❱ 115 │   main()                                                             │
│   116                                                                        │
│   117                                                                        │
│                                                                              │
│ /public/home/mswanghao/TorchProject/lavis/train.py:96 in main                │
│                                                                              │
│    93 │   cfg = Config(parse_args())                                         │
│    94 │                                                                      │
│    95 │                                                                      │
│ ❱  96 │   init_distributed_mode(cfg.run_cfg)                                 │
│    97 │                                                                      │
│    98 │   setup_seeds(cfg)                                                   │
│    99                                                                        │
│                                                                              │
│ /public/home/mswanghao/TorchProject/lavis/lavis/common/dist_utils.py:72 in   │
│ init_distributed_mode                                                        │
│                                                                              │
│    69 │                                                                      │
│    70 │   args.distributed = True                                            │
│    71 │                                                                      │
│ ❱  72 │   torch.cuda.set_device(args.gpu)                                    │
│    73 │   args.dist_backend = "nccl"                                         │
│    74 │   print(                                                             │
│    75 │   │   "| distributed init (rank {}, world {}): {}".format(           │
│                                                                              │
│ /public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/ │
│ cuda/__init__.py:311 in set_device                                           │
│                                                                              │
│   308 │   """                                                                │
│   309 │   device = _get_device_index(device)                                 │
│   310 │   if device >= 0:                                                    │
│ ❱ 311 │   │   torch._C._cuda_setDevice(device)                               │
│   312                                                                        │
│   313                                                                        │
│   314 def get_device_name(device: Optional[_device_t] = None) -> str:        │
╰──────────────────────────────────────────────────────────────────────────────╯
RuntimeError: HIP error: hipErrorInvalidDevice
HIP kernel errors might be asynchronously reported at some other API call,so the
stacktrace below might be incorrect.
For debugging consider passing HIP_LAUNCH_BLOCKING=1.
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /public/home/mswanghao/TorchProject/lavis/train.py:115 in <module>           │
│                                                                              │
│   112                                                                        │
│   113                                                                        │
│   114 if __name__ == "__main__":                                             │
│ ❱ 115 │   main()                                                             │
│   116                                                                        │
│   117                                                                        │
│                                                                              │
│ /public/home/mswanghao/TorchProject/lavis/train.py:96 in main                │
│                                                                              │
│    93 │   cfg = Config(parse_args())                                         │
│    94 │                                                                      │
│    95 │                                                                      │
│ ❱  96 │   init_distributed_mode(cfg.run_cfg)                                 │
│    97 │                                                                      │
│    98 │   setup_seeds(cfg)                                                   │
│    99                                                                        │
│                                                                              │
│ /public/home/mswanghao/TorchProject/lavis/lavis/common/dist_utils.py:72 in   │
│ init_distributed_mode                                                        │
│                                                                              │
│    69 │                                                                      │
│    70 │   args.distributed = True                                            │
│    71 │                                                                      │
│ ❱  72 │   torch.cuda.set_device(args.gpu)                                    │
│    73 │   args.dist_backend = "nccl"                                         │
│    74 │   print(                                                             │
│    75 │   │   "| distributed init (rank {}, world {}): {}".format(           │
│                                                                              │
│ /public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/ │
│ cuda/__init__.py:311 in set_device                                           │
│                                                                              │
│   308 │   """                                                                │
│   309 │   device = _get_device_index(device)                                 │
│   310 │   if device >= 0:                                                    │
│ ❱ 311 │   │   torch._C._cuda_setDevice(device)                               │
│   312                                                                        │
│   313                                                                        │
│   314 def get_device_name(device: Optional[_device_t] = None) -> str:        │
╰──────────────────────────────────────────────────────────────────────────────╯
RuntimeError: HIP error: hipErrorInvalidDevice
HIP kernel errors might be asynchronously reported at some other API call,so the
stacktrace below might be incorrect.
For debugging consider passing HIP_LAUNCH_BLOCKING=1.
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /public/home/mswanghao/TorchProject/lavis/train.py:115 in <module>           │
│                                                                              │
│   112                                                                        │
│   113                                                                        │
│   114 if __name__ == "__main__":                                             │
│ ❱ 115 │   main()                                                             │
│   116                                                                        │
│   117                                                                        │
│                                                                              │
│ /public/home/mswanghao/TorchProject/lavis/train.py:96 in main                │
│                                                                              │
│    93 │   cfg = Config(parse_args())                                         │
│    94 │                                                                      │
│    95 │                                                                      │
│ ❱  96 │   init_distributed_mode(cfg.run_cfg)                                 │
│    97 │                                                                      │
│    98 │   setup_seeds(cfg)                                                   │
│    99                                                                        │
│                                                                              │
│ /public/home/mswanghao/TorchProject/lavis/lavis/common/dist_utils.py:72 in   │
│ init_distributed_mode                                                        │
│                                                                              │
│    69 │                                                                      │
│    70 │   args.distributed = True                                            │
│    71 │                                                                      │
│ ❱  72 │   torch.cuda.set_device(args.gpu)                                    │
│    73 │   args.dist_backend = "nccl"                                         │
│    74 │   print(                                                             │
│    75 │   │   "| distributed init (rank {}, world {}): {}".format(           │
│                                                                              │
│ /public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/ │
│ cuda/__init__.py:311 in set_device                                           │
│                                                                              │
│   308 │   """                                                                │
│   309 │   device = _get_device_index(device)                                 │
│   310 │   if device >= 0:                                                    │
│ ❱ 311 │   │   torch._C._cuda_setDevice(device)                               │
│   312                                                                        │
│   313                                                                        │
│   314 def get_device_name(device: Optional[_device_t] = None) -> str:        │
╰──────────────────────────────────────────────────────────────────────────────╯
RuntimeError: HIP error: hipErrorInvalidDevice
HIP kernel errors might be asynchronously reported at some other API call,so the
stacktrace below might be incorrect.
For debugging consider passing HIP_LAUNCH_BLOCKING=1.
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 14350 closing signal SIGTERM
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 1 (pid: 14351) of binary: /public/home/mswanghao/anaconda3/envs/LLM/bin/python
Traceback (most recent call last):
  File "/public/home/mswanghao/anaconda3/envs/LLM/bin/torchrun", line 8, in <module>
    sys.exit(main())
  File "/public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/public/home/mswanghao/anaconda3/envs/LLM/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
train.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2023-08-21_14:50:52
  host      : a13r1n01
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 14352)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2023-08-21_14:50:52
  host      : a13r1n01
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 14353)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2023-08-21_14:50:52
  host      : a13r1n01
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 14351)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
